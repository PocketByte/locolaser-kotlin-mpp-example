apply plugin: 'kotlin-multiplatform'
apply plugin: 'com.android.library'

// 1.3: Apply LocoLaser plugin
apply plugin: "ru.pocketbyte.locolaser"

group = 'ru.pocketbyte.locolaser.kotlin_multiplatform_example'
version = '1.0'


android {
    compileSdkVersion project.android_sdk_compile
    buildToolsVersion project.android_build_tool_version

    defaultConfig {
        minSdkVersion project.android_sdk_min
        targetSdkVersion project.android_sdk_target
        versionCode 1
        versionName project.version
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    // 2.1: Add dependency for Kotlin Multiplatform
    localize "ru.pocketbyte.locolaser:platform-kotlin-mpp:$locolaser_version"
    // 2.2: Add dependency for JSON platform (for JS i18next)
    localize "ru.pocketbyte.locolaser:platform-json:$locolaser_version"

}

kotlin {
    targets {
        fromPreset(presets.android, 'android')
        fromPreset(presets.jvm, 'jvm')
        fromPreset(presets.js, 'js') {
            configure([compilations.main, compilations.test]) {
                tasks.getByName(compileKotlinTaskName).kotlinOptions {
                    sourceMap = true
                    moduleKind = "umd"
                    metaInfo = true
                }
            }
        }

        final def iOSTarget = System.getenv('SDK_NAME')?.startsWith("iphoneos") \
                              ? presets.iosArm64 : presets.iosX64

        fromPreset(iOSTarget, 'ios') {
            binaries {
                framework('ios_app_framework')
            }
        }
    }

    sourceSets {
        commonMain {
            // 6.1 Add source dir for generated common classes
            kotlin.srcDir('./build/generated/locolaser/common/')
            dependencies {
                api 'org.jetbrains.kotlin:kotlin-stdlib-common'

            }
        }

        androidMain {
            // 6.2 Add source dir for generated android classes
            kotlin.srcDir('./build/generated/locolaser/android/')
            dependencies {
                api 'org.jetbrains.kotlin:kotlin-stdlib'
                api "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
            }
        }

        jsMain {
            // 6.3 Add source dir for generated js classes
            kotlin.srcDir('./build/generated/locolaser/js/')
            dependencies {
                api 'org.jetbrains.kotlin:kotlin-stdlib'
                api "org.jetbrains.kotlin:kotlin-stdlib-js"
                // 5.2 Add i18next dependency
                api "ru.pocketbyte.locolaser:i18next-externals:1.0"
            }
        }

        iosMain {
            // 6.4 Add source dir for generated iOS classes
            kotlin.srcDir('./build/generated/locolaser/ios/')
        }
    }
}

// 4 Run task ‘localize’ before each build
preBuild.dependsOn {
    project.tasks.getByPath(':common:localize')
}